{"ast":null,"code":"var _jsxFileName = \"/Users/hyeonji/Desktop/HyeonJiPARK/week4-ts/my-app/src/components/SearchInput.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { getUserAPI } from \"../lib/api\";\nimport SearchPage from \"./SearchPage\";\nimport Loading from \"./SearchResult/Loading\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function SearchInput() {\n  _s();\n  const [userState, setUserState] = useState({\n    status: \"waiting\",\n    user: null\n  });\n  const usernameRef = useRef(\"\");\n  const navigate = useNavigate();\n  useEffect(() => {\n    navigate(`/search/${usernameRef.current}`, {\n      state: userState\n    });\n  }, [userState]);\n\n  // 검색 input값 받아와서 해당 유저 정보 불러오기\n  const getUser = async username => {\n    usernameRef.current = username;\n    setUserState({\n      ...userState,\n      status: \"loading\"\n    });\n    try {\n      const data = await getUserAPI(username);\n      console.log(\"result: \", data);\n      setUserState({\n        status: \"success\",\n        user: data\n      });\n      navigate(`/search/${username}`, {\n        state: userState\n      });\n    } catch (error) {\n      setUserState({\n        status: \"fail\",\n        user: null\n      });\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(SearchPage, {\n      getUser: getUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(SearchInput, \"kR04JqgWqaTn2RZI05LKdy4ytuI=\", false, function () {\n  return [useNavigate];\n});\n_c = SearchInput;\n;\nvar _c;\n$RefreshReg$(_c, \"SearchInput\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useNavigate","getUserAPI","SearchPage","Loading","SearchInput","userState","setUserState","status","user","usernameRef","navigate","current","state","getUser","username","data","console","log","error"],"sources":["/Users/hyeonji/Desktop/HyeonJiPARK/week4-ts/my-app/src/components/SearchInput.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { getUserAPI } from \"../lib/api\";\nimport { User } from \"../types\";\nimport SearchPage from \"./SearchPage\";\nimport Loading from \"./SearchResult/Loading\";\n\nexport interface UserStateInterface {\n  status: \"waiting\" | \"loading\" | \"success\" | \"fail\";\n  user: User | null;\n}\n\nexport default function SearchInput() {\n  const [userState, setUserState] = useState<UserStateInterface>({\n    status: \"waiting\",\n    user: null,\n  });\n  const usernameRef = useRef(\"\");\n  const navigate = useNavigate();\n  \n    useEffect (() => {\n      navigate(`/search/${usernameRef.current}`, {state: userState})\n    }, [userState]);\n\n  // 검색 input값 받아와서 해당 유저 정보 불러오기\n  const getUser = async (username: string) => {\n    usernameRef.current = username;\n    setUserState({ ...userState, status: \"loading\" });\n    try {\n      const data = await getUserAPI(username);\n      console.log(\"result: \" , data);\n      setUserState({ status: \"success\", user: data });\n      navigate(`/search/${username}`, {state: userState });\n    } catch (error) {\n      setUserState({ status: \"fail\", user: null });\n      console.error(error);\n    }\n  };\n\n  return (\n    <>\n    <SearchPage getUser={getUser} />\n    <Loading />\n    </>\n  )\n};"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,UAAU,QAAQ,YAAY;AAEvC,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,OAAO,MAAM,wBAAwB;AAAC;AAAA;AAO7C,eAAe,SAASC,WAAW,GAAG;EAAA;EACpC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAqB;IAC7DU,MAAM,EAAE,SAAS;IACjBC,IAAI,EAAE;EACR,CAAC,CAAC;EACF,MAAMC,WAAW,GAAGV,MAAM,CAAC,EAAE,CAAC;EAC9B,MAAMW,QAAQ,GAAGV,WAAW,EAAE;EAE5BF,SAAS,CAAE,MAAM;IACfY,QAAQ,CAAE,WAAUD,WAAW,CAACE,OAAQ,EAAC,EAAE;MAACC,KAAK,EAAEP;IAAS,CAAC,CAAC;EAChE,CAAC,EAAE,CAACA,SAAS,CAAC,CAAC;;EAEjB;EACA,MAAMQ,OAAO,GAAG,MAAOC,QAAgB,IAAK;IAC1CL,WAAW,CAACE,OAAO,GAAGG,QAAQ;IAC9BR,YAAY,CAAC;MAAE,GAAGD,SAAS;MAAEE,MAAM,EAAE;IAAU,CAAC,CAAC;IACjD,IAAI;MACF,MAAMQ,IAAI,GAAG,MAAMd,UAAU,CAACa,QAAQ,CAAC;MACvCE,OAAO,CAACC,GAAG,CAAC,UAAU,EAAGF,IAAI,CAAC;MAC9BT,YAAY,CAAC;QAAEC,MAAM,EAAE,SAAS;QAAEC,IAAI,EAAEO;MAAK,CAAC,CAAC;MAC/CL,QAAQ,CAAE,WAAUI,QAAS,EAAC,EAAE;QAACF,KAAK,EAAEP;MAAU,CAAC,CAAC;IACtD,CAAC,CAAC,OAAOa,KAAK,EAAE;MACdZ,YAAY,CAAC;QAAEC,MAAM,EAAE,MAAM;QAAEC,IAAI,EAAE;MAAK,CAAC,CAAC;MAC5CQ,OAAO,CAACE,KAAK,CAACA,KAAK,CAAC;IACtB;EACF,CAAC;EAED,oBACE;IAAA,wBACA,QAAC,UAAU;MAAC,OAAO,EAAEL;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAG,eAChC,QAAC,OAAO;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA,gBACR;AAEP;AAAC,GAjCuBT,WAAW;EAAA,QAMhBJ,WAAW;AAAA;AAAA,KANNI,WAAW;AAiClC;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}